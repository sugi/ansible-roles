---
- name: install packges
  apt: name={{item}}
  with_items:
    - "{{'default-libmysqlclient-dev' if ansible_distribution_release == 'stretch' else 'libmysqlclient-dev'}}"
    - git
    - libicu-dev # for charlock_holmes
    - imagemagick # for paperclip (with minimagick)
    - libsqlite3-dev
    - lv
    - locales-all
    - bash-completion
    - vim
  when:
    - not ((item == "libmysqlclient-dev" or item == "default-libmysqlclient-dev") and not use_mysql)
    - not (item == "libicu-dev" and not use_icu)
    - not (item == "imagemagick" and not use_imagemagick)
    - not (item == "git" and not use_git)
    - not (item == "libsqlite3-dev" and not use_sqlite)
- name: set rc dot files
  copy:
    src: "{{item}}"
    dest: "/home/vagrant/.{{item}}"
  with_items:
    - env
    - irbrc
    - pryrc
  become: False
- name: source .env from .bash_profile
  lineinfile:
    dest: /home/vagrant/.bash_profile
    line: 'source ~/.env'
    regexp: '^source ~/\.env'
    create: yes
  become: False
- name: set auto cd to /vagrant
  lineinfile:
    dest: /home/vagrant/.bash_profile
    line: 'tty -s && cd /vagrant'
    regexp: '^tty -s && cd /vagrant'
    create: yes
  become: False
- name: make ~vagrant/bin
  file:
    dest: /home/vagrant/bin
    state: directory
  become: False
- name: copy bin wrappers
  copy:
    src: "bin-wrappers/{{item}}"
    dest: "/home/vagrant/bin/{{item}}"
    mode: 0755
  with_items:
    - rails
    - rake
    - bundle
- include: rvm.yml
  when: use_rvm
  become: False
- include: nvm.yml
  when: use_nvm
  become: False
- name: run bundler to install gems
  shell: bash -lc bundle
  args: 
    chdir: /vagrant
  become: False
- name: install foreman
  shell: bash -lc 'gem install --no-ri --no-rdoc foreman'
  become: False
  args:
    creates: /home/vagrant/gems/bin/foreman
  when: use_foreman
- name: check vboxsf on /vagrant
  shell: |
    set -e
    if df -T /vagrant 2>/dev/null |grep -q vboxsf; then
      echo -n 'yes'
    else
      echo -n 'no'
    fi
  register: vboxsf
  changed_when: false
- name: bind mount node_modules from ~ to /vagrant
  shell: |
    set -e
    sudo -u vagrant mkdir -p /vagrant/node_modules /home/vagrant/node_modules
    if mount | grep -q ' /vagrant/node_modules '; then
      echo -n 'ok'
    else
      mount -o bind /home/vagrant/node_modules /vagrant/node_modules
      echo -n 'changed'
    fi
  when: vboxsf.stdout == 'yes'
  register: mount_node_modules
  changed_when: mount_node_modules.stdout != 'ok'
- name: run yarn (with nvm)
  shell: bash -lc 'NODE_VERSION=default ~/.nvm/nvm-exec yarn'
  args: 
    chdir: /vagrant
  when: use_yarn and use_nvm
  become: False
- name: run yarn (without nvm)
  shell: yarn
  args: 
    chdir: /vagrant
  when: use_yarn and not use_nvm
  become: False
